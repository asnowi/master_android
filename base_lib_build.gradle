import com.maple.buildsrc.*

android {
    compileSdk ProjectBuildConfig.compileSdkVersion
    buildToolsVersion ProjectBuildConfig.buildToolsVersion

    defaultConfig {
        minSdk ProjectBuildConfig.minSdkVersion
        targetSdk ProjectBuildConfig.targetSdkVersion
        versionCode ProjectBuildConfig.versionLibCode
        versionName ProjectBuildConfig.versionLibName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        ndk {
            // 设置支持的SO库架构
            //abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false   //移除所有未使用的方法、指令以减小 classes.dex 文件
//            shrinkResources  true     //移除所有在工程中没有用到的资源
//            useProguard true //开启压缩
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfig.Version.DEV}\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfig.Version.RELEASE}\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
apply from:"../base_dependencies.gradle"

dependencies {

}