import com.maple.buildsrc.*

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk ProjectBuildConfig.compileSdkVersion
    buildToolsVersion ProjectBuildConfig.buildToolsVersion

    signingConfigs {
        debug {
            storeFile file(keystoreProperties.RELEASE_STOREFILE)
            storePassword keystoreProperties.RELEASE_STORE_PASSWORD
            keyAlias keystoreProperties.RELEASE_KEY_ALIAS
            keyPassword keystoreProperties.RELEASE_KEY_PASSWORD
        }

        release {

            storeFile file(keystoreProperties.RELEASE_STOREFILE)
            storePassword keystoreProperties.RELEASE_STORE_PASSWORD
            keyAlias keystoreProperties.RELEASE_KEY_ALIAS
            keyPassword keystoreProperties.RELEASE_KEY_PASSWORD
        }
    }


    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false   //移除所有未使用的方法、指令以减小 classes.dex 文件
//            shrinkResources  true     //移除所有在工程中没有用到的资源
//            useProguard true //开启压缩
            signingConfig signingConfigs.release//需要使用正式证书签名，才能发布到fir.im
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfig.Version.DEV}\""
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfig.Version.RELEASE}\""
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 自定义打包apk的文件名
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (outputFileName != null && outputFileName.endsWith('.apk')) {
                outputFileName = "${ProjectBuildConfig.applicationId}" +
                        "_${ProjectBuildConfig.versionCode}" +
                        "(${ProjectBuildConfig.versionName})" +
                        "_${variant.buildType.name}" +
                        ".apk"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
apply from:"../base_dependencies.gradle"

dependencies {
}